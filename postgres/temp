
  def get_subbs(treename, id):  
    """ Return list of subbranches of the branch with id """
    try:
      with psycopg2.connect("dbname='" + treename + "' user='postgres' password='123456'") as conn:
        with self.conn.cursor(cursor_factory=psycopg2.extras.DictCursor) as cur:
          try:
            cur.execute("SELECT subb_id FROM branches WHERE id = %s", (id,) )
            self.conn.commit()
          except psycopg2.Error as e:
            self.conn.rollback()
            print("Error: Couldn't execute the query!")
            print(str(e.pgerror))
            raise CantExecute
          else:
            return cur.fetchone()['subb_id']

    except psycopg2.Error:
      print("Error: During working with the database!")
      raise CantExecute

  def get_parent(treename, id):  
    """ Return "parent_id" of the branch with id """
    try:
      with psycopg2.connect("dbname='" + treename + "' user='postgres' password='123456'") as conn:
        with self.conn.cursor(cursor_factory=psycopg2.extras.DictCursor) as cur:
          try:
            cur.execute("SELECT parent_id FROM branches WHERE id = %s", (id,) )
            self.conn.commit()
          except psycopg2.Error as e:
            self.conn.rollback()
            print("Error: Couldn't execute the query!")
            print(str(e.pgerror))
            raise CantExecute
          else:
            return cur.fetchone()['parent_id']

    except psycopg2.Error:
      print("Error: During working with the database!")
      raise CantExecute

  def removeB(treename, id):  
    """ Remove a branch by id """
    try:
      with psycopg2.connect("dbname='" + treename + "' user='postgres' password='123456'") as conn:
        with self.conn.cursor(cursor_factory=psycopg2.extras.DictCursor) as cur:
          try:
            """ remove subbranches """
            subbs = get_subbs(treename, id)
            if subbs != None:
              for cur_subb in subbs:
                removeB(treename, cur_subb)

            """ remove id of the branch from parent """
            parent_id = get_parent(treename, id)
            cur.execute("update branches set subb_id = array_remove(subb_id, %s) where id = %s", (id, parent_id))
            
            """ remove the record """
            cur.execute("DELETE FROM branches WHERE id = %s", (id,) )

            self.conn.commit()
          except psycopg2.Error as e:
            self.conn.rollback()
            print("Error: Couldn't execute the query!")
            print(str(e.pgerror))
            raise CantExecute

    except psycopg2.Error:
      print("Error: During working with the database!")
      raise CantExecute
